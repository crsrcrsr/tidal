
d1 $ mask "1 [1 1 1 0] ~  ~" 
	$ n (scale "phrygian" ("[<0 7 12 6> 3 <5 12 7> 6]*2  0 "|+"{0 7 3 5 12}%4" ))
	# s "pd" # midichan 0 |+ n "[-24|-36]*8"

d2 
	$ gain "1 [~ 1]!2 [1*4]" 
	# s "808bd:6" 
	# crush "<6 5>" # cut 1

d3 
--	$ si
	$ (* lpf 1) 
	$ (|+ lpf (range 100 4000 $ slow 6 sine)) 
	$ echoWith 5 (3/16) (# lpf 1000) 
	$ s "cp*4" # gain "1 0.7!3" 
	# room 0.3 # sz 0.9 # lpf 10000 

d3 silence


hush

flood "six <> hok <> "

let six1 = "{1 1 0}%16"
    six2 = "{1 0 0 0 0 1 0}%16"
    six3 = "{1 0 1 0 0 1 1 0 1 0}%16"
    six4 = "{1 0 1 0 0 0 0 0 1 0 1 0}%16"
    six5 = "{1 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 0}%16"
    six6 = "{1 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0}%16"

d6 $ stack [
--	si $
	 s "~ ~ numbers:6" # speed (1) # hpf 100 # crush 6 
	, 
-- 	si $ 
	rarely (plyWith "[4|16| 32]" (# gain 0.8)) $ 
	n "<[18 8 23 ~ ~ ~] [18 23 18 8 8]?>" # s "alphabet" # ring "0 1" 
	# ringf 6666 # lpf 666 
]

do 
d6 silence

hush

d1 silence

panic

d1 $ stack[
--	si $ 
--	echoWith 7 (2/16) ((* gain 0.9).(* lpf (0.75))) $ 
	gain six1
	# s "bd:6"  # lpf 15000  # lpq 0.3 # orbit 1
--	# speed (-0.5) 
	,  
--	si $ 
	(/ lpf "<1.1 1.2 1.3 1.4>") $ 
	gain six3 # s "aa:2" * gain "[1.1 0.8 0.7 0.7] 0.9 0.8 [1.1 0.9]" 
	# lpf "2000 2100 ~ [1900 750] " 
	# lpq "0.7 [0.2 0.7] 0.2 0.4" # room 0.3 # sz 0.9
	# hpf 1000 * gain 0.8
]

d3 $ ply 1 
	$ jux rev $  (fast "[1 1 2 1 1 2 4 1]/2") 
	$ every 3 (superimpose (slow 2).(+ up (7) )) 
	$ up (scale "chinese" ("{0 4 6}%8"+"{-12 0 6 3 12}%4") ) 
	# s "<bin coins>/4"  
	# hpf 200 + up "<0 12 -12 24>/4" 
	# gain 0.8 # room 0.2  # sz 0.9 # speed 0.25

d2 $ jux rev $ (1<~) $ every 2 ((plyWith "<[1 2 4 2] 2 >/4"(/ speed (2) )))
	$ plyWith 2 (# gain 0.7) 
	$ s "print:1*4" # speed 2 # crush 4 # legato 1 
	# lpf "[1000 1000 4000 1000]"

d2 $ sometimes (plyWith 2 (+ n 24)) 
	$ every 3 rev $ n (scale "chinese" ("[1 5] 5 8*2 6 8 0*2 12 6"+"{0 7}%2")) 
	# s "superfork" + n (-24) # gain "[1 0.8 0.9 1 1 1.2 1.3 1]*2" 
	# lpf "[1000|3000]*4" # room 0.3 # sz 0.9 
	# delay 0.3 # delayt (3/16) # delayfb 0.9 # lock 1 |* gain 1.4

------------------------------------------------------------------------------------

hush

flood "[halls] "

d2 $ mask "1 1 1 1"
	$ rarely ((echoWith 8 ((choose[1,3,5])/16) (* gain 0.9)).(# legato 4)) 
	$ (32<~) 
	$ sometimes (# speed (-2)) 
	$ up "[0 12 6 7]*2"# n "0 2 3 7"  # s "pluck" 
	# scram (choose [1,0,0.2]) # room 0.2 # sz 0.9 
	|+ up (choose[0, 12, 24]) # pan rand 
--	# cps ("[120| 60| 90| 150| 180]*4"/60/4) 

d7 
	$ (|* lpf (range 0.7 1 $ slow 8 sine )) 
	$ superimpose ((# room 1 ).(# sz 0.9).(# gain 0.25).(# hpf 500))
	$ s "808bd:6 " 
	# lpf 500 
	# lpq (range 0.3 0.9 $ slow 5 sine)
	# delay 0.3 # delayt(6/16) # delayfb 0.9 # lock 1 # gain 0.7  # hpf 100

d4 $ s "lighter*8 <[lighter*8]/2 ~> " # speed (1) # legato 1 # gain "0 1 0 [0.5 0.7 0.8 1]"

d5 $ superimpose (# speed (0.25)) 
	$ s "pebbles/4" # cut 5 
	# bpf 5000 # bpq 3 
	# speed 1 # gain 0.8 
	# room 0.2 # sz 0.99

hush

d4 silence

d2 $ slow 4
--	$ degrade 
	$ sometimes (# speed "-0.5") $ somecyclesBy 0.25 (superimpose (fast 4).(+ up "24").(* gain "1 0")) 
	$ superimpose ("0.125 0.5"<~)
	$ every 3 (jux (rev)) 
	$ every 5 rev 
	$ s "[supergong]"  
	+ n (run "16" ) + up "<0 5 7 2>" + up ("<-12 0 24>*2")
	# delayt (1.5/16) # delay 0.5 # lock 1 # delayfb 0.8 
	# lpf "[150|700|500|5000]*16" 
	# pan (range 0.25 0.75 $ fast 1 sine)
	# room 0.5 # sz 0.9 # gain 0.7 # hpf 200

hush

setcps(120/60/4)

flood "hi this is CRSRCRSRRR "

d1 
--	$ every 4 brak $ ghost
--	$ every 4 ((#speed (-1)).(rev)) 
	$ stack[
--	si $ -- (clicks)
	 every 16 (ply "1 2")
	$ within (0.75, 1) (# pan rand) $ up "c10*16 " # s "sine" 
	# rel 0.1 # att 0 # legato "[1 0.01!2 1] 0.1 0.1 0.8" 
	# gain "1 0.8!31" 
	* gain "1 0.8 1 [0 1.1]" # accelerate (slow 4 sine) 
	# orbit 1 * gain "<1 0 1 0 1 1>*2"
	, 
--	si $ 
	superimpose (# triode "0 4") 
	$ gain "1.05 [~ 1/4] [~ 0.8/2 0.9 0] [0.9*2 ~]" 
	# s "[808bd:6,click:2]" # lpf 500 # orbit 1
	, 
--	si $
	gain "0 1 0 1" #  s "click:2" # room 0.1 # sz 0.5 # orbit 2
] |* gain 1.2


hush
-------------------------------------------------------------------------------------
>> algorapture

>> CRSRCRSRRR

jumpMod 4 4 $ superimpose (+ n "<12/2 7/3 24/5>") 
	$ n "<[c2,f4] cs2>/2" # s "superfork" 
	# lpf "<1000 4000 6000>" 
	# lpq "<0.3 0.2 0.4>" # room 0.5 # sz 0.95 # orbit 4
	# gain 0.9 # crush "<5 8 7 4 3>" # att 0.2 # rel 1 # legato 4 |+ n 0
	# delay 0.5 # delayt (6/16) # delayfb 0.8 # lock 1# lpf 1000

jumpMod 3 4 $ every 32 (rev) $ ply 2 
	$ stack[
	s "<[click:2*16]*4>/8" 
--	s "<[click:2*32]*4>/8" 
        # gain "1 0.6!6 1" # lpf "10000" 
	# lpq 0.5 # room 0,
   	s "~ click:3*2" # gain 1.2 # room 0,
	mask "<0 0 0 0 0 0 0 1>" 
	$ s "~ tink:2*4" # speed "~ ~ 0.025 0.125" 		     
	# room 0.4 # sz 0.9 # orbit 2 
]

jumpMod 1 4 $ (1 <~) $ every 16 ((ply 2).(#legato 0.5))
	$ s "<aa:1 808bd:7> [~ ~ aa:1 ~]  ~ bd*4?" 
	# lpf 5000 # cut 1 # gain 1 # hpf 20

d1 silence

hush

jumpMod 2 4 
	$  mask "[0 1]/2"
	$ every 5 (jux rev) 
	$ every 8 (# speed "1 1 1 -1") 
	$ every 4 ghost 
	$ every 6 (rev)
	$ echoWith 2 ("<3 5 6>"/16) (
		(# gain 0.8).(echoWith 7 (6/32) 
		((# room 0.2).(# sz 0.8).(* gain 0.9).(* lpf 0.66)))
	)
	$ s "~ [808sd:9|aa:2]" # lpf 15000 # gain 0.7 # orbit 0 # hpf 20

jumpMod 5 4 $ s "<[~ ~ [aa] ~] ~!1>"  
	# speed (-1) # delay 0.4 # delayfb 0.8 # lock 1 # delayt (3/16) # crush 4

-----------------------------------------------------------------------------------

--separations

xfade 4 
	$ every 8 (# scram 0.2 ) 
	$ (4<~) $ every 8 (# speed (-2)) $ every 4 (plyWith 2 (* speed 0.8))
	$ every 5 (# vowel "<a e i o>/5") 
	$ every 3 ( # octer 1 )  
	$ s "<[~ numbers][coins][coins][~ numbers:1] > ~ < ~ > ~" 
	# room 0.8 # sz 0.9 # lpf (range 400 1000 $ slow 7 sine) 
	# up (-36) 
	# delay 1 # delayt ("<3 5 6 7>/4"/16) # delayfb 0.8 # lock 1 
	# att 0.01 # rel 0.5 # gain 0.9 # orbit 5

d1 $ every 4 (# legato 0.2) 
	$ (# lpf "10000 1000 5000 1000" ) 
	$ every 16 ((slow 8).(striate 8)) 
	$ superimpose (# triode 4) 
	$ gain "1(6,16)"
	# s "808bd:6" 
	# legato 2  
	* gain "[1.1|0.9]*16" # rel (choose [1,0.5,0.1]) * gain 1

jumpMod 3 4 $ every 16 (rev) $ ply 2 
	$ stack[
	s "<[click:2*16]*4[click:2*32]*4>/8" 
	# gain "1 0.6!6 1" # bpf "1000 5000" 
	# bpq 0.5 # room 0,
   	s "~ click:3*2" # gain 1.4,
	mask "<0 0 0 0 0 0 0 1>" $ plyWith 4 (* speed 0.8)
	$ s "~ bin:2" # speed "~ -1 -0.5 -0.125" # up "0 [0 -1]" 		     
	# room 0.4 # sz 0.9 # orbit 2 
]

d1 silence

d5 $ (# speed (choose [1,2,4,8])) 
	$ palindrome 
	$ slow 2 
	$ ((striate 32).(rev)) 
	$ s "alphabet/2" # room 0.2 # sz 0.99 

d1 $ every 2 (iter 2) 
	$ rarely ((slow 2).(ply 2).(# crush 4).(# legato "[0.25|1]").(* gain 0.9)) 	     $ every 6 ( rev ) 
	$ every 5 (slow 2) $ every 2 (jux (rev)) 
	$ stack [
	every 8 (# djf 0.8) $
	superimpose ((# triode 10).(# crush 8)) 
--	$ gain "1(6,16)"
	$ gain "[1][1 ~ 0.8 1][[0 1] 0.8] <1 [1 0.8]> "
        * gain 0.9
	# s "[808bd:6,click:2]" 
	* gain (1.1*1) # lpf 2000 # legato 1  
	, ghost $ gain "1 [1.2 1] < 1 1*4 1*2 > <1 ~>"
        # s "aa:1"
        # lpf "5000 10000 500 2000 "
        * gain (0.9)
	# hpf 100
]

---------------------------------------------------------------------------------

flood "lies ?????? "

do 
d1 silence
d2 silence
d3 silence 
d4 silence
d6 silence
d7 silence

d5 $ mask "<1 1 1 1 1 1 1 [1 1 1 1]>" 
	$ (# up (scale "phrygian" "<0!6 -2!2>"))
	$ (# pan (fast 16 rand)) $ sometimes (# speed (choose[1,0.5,2])) 
	$ plyWith 8 (* gain 0.9) 
	$ slow 2 $ striate 2
	$ s "<sine alphabet:2>*2" # att (range 0.001 0.005 $ slow 10 sine ) 
	# rel 0.1 # speed 1 # room 0.2 # sz 0.9 
	# gain 1 # lpf "{5000 2000 7000 300 10000}%8" 

d1 silence

d1 $ every 4 (slow 2) $ fast 1 
	$ stack [
	every 3 (0.25<~) 
	$ every 7 ((ply 2).(# vowel "a e o a" ))
	$ every 2 (# speed (-0.625)) 
	$ rarely (ply 2) 
--	$ s " aa:1 aa*2? [aa aa:1] aa " 
	$ s "{aa:1 ~!2 }%16"
	# delay 0.5 # delayt (5/16) # delayfb 0.5 # lock 1 
	# pan rand 
	# speed "[2 1]" # ring 0.5 
	# ringf (range 300 6000 $ fast 16 rand) 
	# room 0.5 # sz 0.9 # cut 1 # legato "<0.1 0.25 4>" 
	# orbit 1 * gain 0.9 # hpf 40
	, every 4 (# speed "-0.25") 
	$ s "gabba*4? ~ cp ~ " # orbit 2
	, every 6 ((rev).(# speed (-0.5))) $ every 4 (plyWith 2 (# binshift 4)) 
	$ s "[techno](6,16)" # n "8*16" # cut 1 # room 0.3 # sz 0.9 # hpf 500
]

hush


d1 $ somecycles ((# hpf 1000).(# speed 2)) $ s "gabba*16?" 

d3 
	$ every 8 (# accelerate 4)
	$ mask "1 1 0 1?" $ (# room 0.2)
	$ every 6 (# speed "1 1 2 0.5") 
	$ every 16 ((degrade).(ply 2)) 
	$ every 7 ghost 
	$ every 3 (jux rev) 
	$ every 12 (# legato " 1 1 1 0.25") 
	$ every 32 (# s "~") 
	$ every 8 (# scram 0.5) $ (4<~) 
	$ every 6 rev $ every 8 (# crush 4) 
	$ every 2 (ply "2 1 2 <2>") $ n (run 16) # s "amencutup" 
	# lpf "[10000!7 1000]/4" # lpq 0.2 # sz 0.9  # gain 1.1

d3 silence

hush

d2 $ mask "1" $ every 12 (jux rev) 
	$ every 8 (# speed "1 1 1 -1") 
	$ every 5 ghost 
	$ every 6 rev 
	$ echoWith 2 ("<3 5 6>"/16) 
	((# gain 0.8)
	.(echoWith 7 (6/32) ((# room 0.2).(# sz 0.8).(* gain 0.9).(* lpf 0.66))))
	$ s "~ [808sd:9|aa:2]" # lpf 15000 # gain 0.7 # orbit 0

-------------------------------------------------------------------------------------

-- dimens

d5 $ fast 2
--	$ fast "[1 2 4 2]/2" 
	$ (# speed (range 0.9 1.1 $ slow 8 sine)) 
	$ (# triode "0 0 0 2")
	$ (# bpf "1000 2000 1000 7000") 
	$ (# bpq "0.2 0.5 0 3")
 	$ superimpose ((# scram (slow 10 sine)).(# gain 0.5))
	$ ("[0.125 0.0625 0 0.75 0 0.5 0.125 0.125]*1" <~) 
	$ superimpose ((0.125 <~).(+ up (7))) 
	$ (# pan rand) 
	$ superimpose ( fast 2 ) $ superimpose (fast 0.25) 
	$ s "[bin]*8"
	# up "<-12 0>/8" # legato 0.1 
	# room 0.3 # sz 0.95 # att 0.01 # rel "[2|1]*16" 
	# delay (range 0.5 0.3 $ slow 5 sine) 
	# delayfb 0.9 # delayt (6.1/16) # lock 1 
	* gain 0.9

do
d1 silence
d2 silence
d3 silence
d4 silence
d8 silence

d1
	$ fast 1
	$ stack [
	s "[feel:6,bd](9,16)" # hpf 20 # distort "0.1 0.2 0.3 0.4" # gain 2
	# rel 0.1 # att 0.01 # hold "0 0.1 0.15 0.2"
	, ("[0 0 0.125 0]*2"<~) $ s "[e]*16?" # hpf 100 # up "[0 0 12 0]*4" # gain 2
	, mask "[0 0 0 [0 1]]/4" $ n "{9 0 10 0 8 1 }%16" # s "808sd" # gain 2
]

d3 $ fast 1 $ every 5 (plyWith "1 2" (# gain 1.2)) 
	$ s "{aa ~!2}%8" # speed "[0.8 [0.6 0.44]]/2" 
	# gain 1.2 # delay 0.2 # delayfb 0.8 # lock 1 # delayt (1/16) # up (0)

d4 $ fast 1 $ s "808cy/8 cp ~ [cp hh:3]" # speed "1 2" # gain 1.2 # room 0.4 # sz 0.9

hush

-------------------------------------------------------------------------------------

--yards

d1 $ s "aa:1*4" # gain 1.3

xfade 1 silence

d2 silence

d3 $ superimpose (echoWith 3 (6/16) (* gain 0.9)) $ s "808bd:6*4?" # gain 1


d2 $ s "cp*4" # speed "<1 1>" 
	# room 0.5 # sz 0.96 
	# delay 0.5 #delayfb 0.9 # lock 1 
	# delayt (3/16)
	
hush

d3 $ fast 1 $ sometimes (rev) $ rarely (echoWith 2 4 ((* speed 0.75).(* gain 0.9)))
        $ s "[808bd:6]*16"
        # lpf "{4000 400 2000 700 10000}%[<16 8 5 4 7>*4]"
        # att "{ 0.004 0.001 0.05 0.01 0 }%16"
        # rel 0.1
        # cut 1
        # triode "[0|1|2]*16" # hpf (range 300 1000 $ fast 4 rand)
        # gain 1.2 # room 2 # sz 0.1
        # delay 0.1 # delayt "[0.1|0.003|0.01]" # delayfb 0.7 # lock 1

d5 $ superimpose ((0.125<~).(# hpf 2000).(# distort (slow 18 sine))) 
	$ s "808bd:6*8" 
	# lpf 100 
	# gain (range 0.5 1 $ slow 6 sine) 
	# hpf 10 # crush 2

hush

d8 $ stack [
	n (scale "minPent" ("[0 8 7 2 8 2 4 4]*2 " + "<0 -2 5> ") )
	,
	(# ccv (range 0 20 $ slow 4 sine)) $ ccn "3*16"
]	# s "pd" # midichan 0


d3 $ ( * speed "<1 1 1 -1>") 
	$ somecycles rev  
	$ every 4 (# legato 0.5) 
	$ ply "< 1 3 2 1 6 1>"
	$ begin " <0 0.5 0.125> 0.125 <0.25 0.325> 0.325 <0.5*2 0 > 0.625 0.75 <0.825 0> " 
	# s "breaks165" 
	# legato 1 
	# gain 2  
	# speed 1 
	# crush "4 16" 
	# lpf (range 5000  500 $ slow 3 sine ) # unit "c"

hush

d1 $ (# gain rand) $ jux rev $ plyWith 32 ( * speed 1.1) $ s "cp" # speed 1

setcps(166/60/4)

d10 $ cps ("<160>/1"/60/4)

d10 $ cps (166/60/4)

flood "d a d g o d "

hush

d2 $ s "cp*2" # speed "<1 1>" 
	# room 0.5 # sz 0.9 
	# delay 0.5 # delayfb 0.9 # lock 1 
	# delayt (3/16) # gain 1
	
d3 $ (* speed "<1 1 1 -1>") 
	$ somecycles rev  
	$ every 4 (# legato 0.5) 
	$ ply "< 1 3 2 1 6 1>"
	$ begin " <0 0.5 0.125> 0.125 <0.25 0.325> 0.325 <0.5*2 0 > 0.625 0.75 <0.825 0> " 
	# s "breaks165" 
	# legato 1 
	# gain 2
	# speed 1 
	# crush "4 16" 
	# lpf (range 5000  500 $ slow 3 sine ) # unit "c"

d4 $ s "bd*8" # gain "[1 0.9]*4"



